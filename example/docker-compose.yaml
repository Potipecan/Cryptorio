
services:
  zookeeper:
    image: wurstmeister/zookeeper
    restart: always
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    restart: always
    hostname: kafka
    container_name: kafka
    expose:
      - "9093"
      - "9092"
    ports:
      - "9092:9092"
      #- "9093:9093"
    environment:
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9093,EXTERNAL_SAME_HOST://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9093,EXTERNAL_SAME_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: ping:1:1,pong:1:1 # Edit this to your liking

    depends_on:
      - zookeeper

  cryptorio-kafka-example:
    build:
      context: ../
      dockerfile: example/Dockerfile
    container_name: kafka-example
    restart: always
    environment:
      AGENT_KAFKA_CLIENT_ID: ping-pong
      AGENT_KAFKA_BROKER_ADDRESS: kafka
      AGENT_KAFKA_BROKER_PORT: 9093
    
    depends_on:
      - kafka